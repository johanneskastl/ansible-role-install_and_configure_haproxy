#
# {{ ansible_managed }}
#

global
  log /dev/log daemon
  maxconn {{ global_maxconn }}
  chroot {{ chroot_path }}
  user {{ haproxy_user }}
  group {{ haproxy_group }}
  daemon
  stats socket /var/lib/haproxy/stats user {{ haproxy_user }} group {{ haproxy_group }} mode 0640 level operator
  tune.bufsize {{ global_tune_bufsize }}
  tune.ssl.default-dh-param {{ global_tune_ssl_default_dh_param }}
  ssl-default-bind-ciphers {{ global_ssl_default_bind_ciphers }}

defaults
  log     {{ defaults_log }}
  mode    {{ defaults_mode }}
{% for option in defaults_options %}
  option  {{ option }}
{% endfor %}
  retries {{ defaults_retries }}
  maxconn {{ defaults_maxconn }}
  timeout connect {{ defaults_timeout_connect }}
  timeout client {{ defaults_timeout_client }}
  timeout server {{ defaults_timeout_server }}

{% if publish_stats | bool %}
listen stats
  bind 0.0.0.0:{{ stats_port }}
{% if publish_stats_ipv6 | bool %}
  bind :::{{ stats_port }} v6only
{% endif %}
  stats enable
  stats uri {{ stats_uri }}
  stats refresh {{ stats_refresh_interval_seconds }}
  rspadd Server:\ haproxy/2.0
{% endif %}

{% if destinations is defined %}
{% for destination in destinations %}
{% if destination['type'] == "simple" %}
listen {{ destination['name'] }}
    bind *:{{ destination['port'] }}
    option {{ destination['option'] }}
{% if destination['option'] == "httpchk" %}
    http-check {{ destination['option_configuration'] }}
{% endif %}
    default-server {{ destination['default_server'] }}
{% for backend in groups[destination['backends_group']] %}
    server {{ destination['backend_prefix'] | default('') }}{{ backend }} {{ hostvars[backend]['ansible_default_ipv4']['address'] }}:{{ destination['backend_port'] }} {{ destination['backend_options'] }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
